READDIR(3)                             Linux Programmer's Manual                            READDIR(3)

[1mNAME[0m
       readdir - read a directory

[1mSYNOPSIS[0m
       [1m#include <dirent.h>[0m

       [1mstruct dirent *readdir(DIR *[4m[22mdirp[24m[1m);[0m

[1mDESCRIPTION[0m
       The  [1mreaddir[22m() function returns a pointer to a [4mdirent[24m structure representing the next directory
       entry in the directory stream pointed to by [4mdirp[24m.  It returns NULL on reaching the end  of  the
       directory stream or if an error occurred.

       In the glibc implementation, the [4mdirent[24m structure is defined as follows:

           struct dirent {
               ino_t          d_ino;       /* Inode number */
               off_t          d_off;       /* Not an offset; see below */
               unsigned short d_reclen;    /* Length of this record */
               unsigned char  d_type;      /* Type of file; not supported
                                              by all filesystem types */
               char           d_name[256]; /* Null-terminated filename */
           };

       The only fields in the [4mdirent[24m structure that are mandated by POSIX.1 are [4md_name[24m and [4md_ino[24m.  The
       other fields are unstandardized, and not present on all systems; see NOTES below for some  fur‐
       ther details.

       The fields of the [4mdirent[24m structure are as follows:

       [4md_ino[24m  This is the inode number of the file.

       [4md_off[24m  The  value  returned  in [4md_off[24m is the same as would be returned by calling [1mtelldir[22m(3) at
              the current position in the directory stream.  Be aware that despite its type and  name,
              the  [4md_off[24m field is seldom any kind of directory offset on modern filesystems.  Applica‐
              tions should treat this field as an opaque value, making no assumptions about  its  con‐
              tents; see also [1mtelldir[22m(3).

       [4md_reclen[0m
              This  is the size (in bytes) of the returned record.  This may not match the size of the
              structure definition shown above; see NOTES.

       [4md_type[24m This field contains a value indicating the file type, making it possible  to  avoid  the
              expense of calling [1mlstat[22m(2) if further actions depend on the type of the file.

              When  a  suitable feature test macro is defined ([1m_DEFAULT_SOURCE [22mon glibc versions since
              2.19, or [1m_BSD_SOURCE [22mon glibc versions 2.19 and earlier), glibc  defines  the  following
              macro constants for the value returned in [4md_type[24m:

              [1mDT_BLK      [22mThis is a block device.

              [1mDT_CHR      [22mThis is a character device.

              [1mDT_DIR      [22mThis is a directory.

              [1mDT_FIFO     [22mThis is a named pipe (FIFO).

              [1mDT_LNK      [22mThis is a symbolic link.

              [1mDT_REG      [22mThis is a regular file.

              [1mDT_SOCK     [22mThis is a UNIX domain socket.

              [1mDT_UNKNOWN  [22mThe file type could not be determined.

              Currently,  only  some  filesystems  (among them: Btrfs, ext2, ext3, and ext4) have full
              support for returning the file type in [4md_type[24m.  All applications must properly handle  a
              return of [1mDT_UNKNOWN[22m.

       [4md_name[24m This field contains the null terminated filename.  [4mSee[24m [4mNOTES[24m.

       The data returned by [1mreaddir[22m() may be overwritten by subsequent calls to [1mreaddir[22m() for the same
       directory stream.

[1mRETURN VALUE[0m
       On success, [1mreaddir[22m() returns a pointer to a [4mdirent[24m structure.  (This structure may  be  stati‐
       cally allocated; do not attempt to [1mfree[22m(3) it.)

       If  the  end of the directory stream is reached, NULL is returned and [4merrno[24m is not changed.  If
       an error occurs, NULL is returned and [4merrno[24m is set appropriately.  To distinguish end of stream
       and from an error, set [4merrno[24m to zero before calling [1mreaddir[22m() and then check the value of [4merrno[0m
       if NULL is returned.

[1mERRORS[0m
       [1mEBADF  [22mInvalid directory stream descriptor [4mdirp[24m.

[1mATTRIBUTES[0m
       For an explanation of the terms used in this section, see [1mattributes[22m(7).

       ┌──────────┬───────────────┬──────────────────────────┐
       │[1mInterface [22m│ [1mAttribute     [22m│ [1mValue                    [22m│
       ├──────────┼───────────────┼──────────────────────────┤
       │[1mreaddir[22m() │ Thread safety │ MT-Unsafe race:dirstream │
       └──────────┴───────────────┴──────────────────────────┘

       In the current POSIX.1 specification (POSIX.1-2008), [1mreaddir[22m() is not required  to  be  thread-
       safe.   However,  in  modern  implementations  (including the glibc implementation), concurrent
       calls to [1mreaddir[22m() that specify different directory streams are thread-safe.   In  cases  where
       multiple  threads  must read from the same directory stream, using [1mreaddir[22m() with external syn‐
       chronization is still preferable to the use of the deprecated  [1mreaddir_r[22m(3)  function.   It  is
       expected  that a future version of POSIX.1 will require that [1mreaddir[22m() be thread-safe when con‐
       currently employed on different directory streams.

[1mCONFORMING TO[0m
       POSIX.1-2001, POSIX.1-2008, SVr4, 4.3BSD.

[1mNOTES[0m
       A directory stream is opened using [1mopendir[22m(3).

       The order in which filenames are read by successive calls to [1mreaddir[22m() depends on the  filesys‐
       tem implementation; it us unlikely that the names will be sorted in any fashion.

       Only  the  fields  [4md_name[24m and (as an XSI extension) [4md_ino[24m are specified in POSIX.1.  Other than
       Linux, the [4md_type[24m field is available mainly only on BSD  systems.   The  remaining  fields  are
       available  on  many, but not all systems.  Under glibc, programs can check for the availability
       of the fields not defined in POSIX.1  by  testing  whether  the  macros  [1m_DIRENT_HAVE_D_NAMLEN[22m,
       [1m_DIRENT_HAVE_D_RECLEN[22m, [1m_DIRENT_HAVE_D_OFF[22m, or [1m_DIRENT_HAVE_D_TYPE [22mare defined.

   [1mThe d_name field[0m
       The  [4mdirent[24m  structure  definition  shown  above is taken from the glibc headers, and shows the
       [4md_name[24m field with a fixed size.

       [4mWarning[24m: applications should avoid any dependence on the  size  of  the  [4md_name[24m  field.   POSIX
       defines it as [4mchar[24m [4md_name[][24m, a character array of unspecified size, with at most [1mNAME_MAX [22mchar‐
       acters preceding the terminating null byte ('\0').

       POSIX.1 explicitly notes that this field should not be used as an lvalue.   The  standard  also
       notes  that  the use of [4msizeof(d_name)[24m is incorrect; use [4mstrlen(d_name)[24m instead.  (On some sys‐
       tems, this field is defined as [4mchar[24m [4md_name[1][24m!)  By implication, the use [4msizeof(struct[24m  [4mdirent)[0m
       to capture the size of the record including the size of [4md_name[24m is also incorrect.

       Note that while the call

           fpathconf(fd, _PC_NAME_MAX)

       returns  the  value  255  for  most  filesystems,  on some filesystems (e.g., CIFS, Windows SMB
       servers), the null-terminated filename that is (correctly)  returned  in  [4md_name[24m  can  actually
       exceed this size.  In such cases, the [4md_reclen[24m field will contain a value that exceeds the size
       of the glibc [4mdirent[24m structure shown above.

[1mSEE ALSO[0m
       [1mgetdents[22m(2), [1mread[22m(2), [1mclosedir[22m(3), [1mdirfd[22m(3),  [1mftw[22m(3),  [1moffsetof[22m(3),  [1mopendir[22m(3),  [1mreaddir_r[22m(3),
       [1mrewinddir[22m(3), [1mscandir[22m(3), [1mseekdir[22m(3), [1mtelldir[22m(3)

[1mCOLOPHON[0m
       This  page  is  part  of  release  4.06  of  the Linux [4mman-pages[24m project.  A description of the
       project, information about reporting bugs, and the latest version of this page, can be found at
       https://www.kernel.org/doc/man-pages/.

                                              2016-03-15                                    READDIR(3)
